@page "/ru/latest/configuration/scripts"
@{
    Layout = "_ArticleLayout";
    ViewBag.Title = "Скрипты и формулы";
}

<nav class="doc-toc">
    <div class="h6">На этой странице</div>
    <hr>
    <ul>
        <li><a href="#script-rules">Правила создания скриптов</a></li>
        <li><a href="#available-variables">Доступные переменные</a></li>
        <li><a href="#available-functions">Доступные функции</a></li>
        <li><a href="#template-functions">Функции из шаблона проекта</a></li>
        <li><a href="#debugging">Отладка скриптов</a></li>
        <li><a href="#examples">Примеры формул</a></li>
    </ul>
</nav>

<div class="doc-content">
    <h1>Скрипты и формулы</h1>
    <p>В приложение Сервер встроен механизм исполнения пользовательских скриптов. Скрипты применяются для расчёта значений и статусов каналов, а также для расчёта значений команд управления.</p>
    <p>Скрипты записываются в таблицу <strong>Скрипты</strong> базы конфигурации. Созданный по шаблону проект уже содержит начальный набор скриптов, который удобно использовать в качестве примеров для разработки собственных скриптов. Переменные и функции, реализованные в таблице <strong>Скрипты</strong>, затем вызываются в столбцах <strong>Входная формула</strong> и <strong>Выходная формула</strong> таблицы <strong>Каналы</strong> . Чтобы расчёт по формуле для какого-либо канала выполнялся, необходимо установить для него галочку в столбце <strong>Формула вкл</strong>.</p>

    <h2 id="script-rules">Правила создания скриптов</h2>
    <p>Общие правила написания и использования скриптов:</p>
    <ol>
        <li>Скрипты записываются согласно <a href="https://learn.microsoft.com/ru-ru/dotnet/csharp/language-reference/" target="_blank">синтаксису языка C#</a>. Доступны различные классы фреймворка .NET, например, Math, DateTime, File.</li>
        <li>В таблицу <strong>Скрипты</strong> добавляются новые константы, поля, свойства и методы, которые становятся доступны в формулах каналов.</li>
        <li>Если хотя бы один скрипт или формула содержит ошибку, работа Сервера невозможна. Информация об ошибках в скриптах выводится в журнал приложения.</li>
    </ol>

    <p>Правила вычисления формул каналов:</p>
    <ol>
        <li>Расчёт входной формулы для каналов типа <em>Входной</em> и <em>Входной/выходной</em> выполняется только при получении Сервером новых данных по этим каналам. Используйте эти типы каналов, если данные приходят от устройств.</li>
        <li>Расчёт входной формулы для каналов типа <em>Расчётный</em> и <em>Расчётный/выходной</em> выполняется постоянно на каждом шаге основного цикла Сервера. Последовательность расчёта – от меньших номеров каналов к большим. Расчётные типы каналов используются, если значение и статус канала вычисляются на основе данных других каналов.</li>
        <li>Расчёт выходной формулы для каналов типа <em>Входной/выходной</em>, <em>Расчётный/выходной</em> и <em>Выходной</em> выполняется при отправке команды управления на соответствующий канал.</li>
        <li>Статус канала после вычисления входной формулы для каналов типа <em>Входной</em> и <em>Входной/выходной</em> равен статусу переданных Серверу данных, если расчёт статуса не задан в формуле явно.</li>
        <li>Для каналов типа <em>Расчётный</em> и <em>Расчётный/выходной</em> устанавливается статус <em>Определён</em>, если расчёт статуса не задан в формуле явно.</li>
        <li>Входная формула канала, которая не содержит символа &quot;;&quot;, определяет расчёт значения канала.</li>
        <li>Если входная формула канала содержит символ &quot;;&quot;, то она разбивается на две части: первая часть рассчитывает значение канала, вторая часть – статус канала.</li>
        <li>Если для канала заданы границы, то статус канала пересчитывается с учётом границ после вычисления входной формулы канала.</li>
        <li>Формулы должны возвращать значения опередённых типов данных, которые описаны ниже.</li>
    </ol>

    <p>Входные формулы каналов возвращают данные следующих типов:</p>
    <table class="table table-hover">
        <thead>
            <tr>
                <th>Тип данных</th>
                <th>Описание</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>double</td>
                <td>Значение канала</td>
            </tr>
            <tr>
                <td>CnlData</td>
                <td>Значение и статус канала</td>
            </tr>
            <tr>
                <td>long</td>
                <td>64-битное целое значение канала, для которого в таблице <strong>Каналы</strong> установлен тип данных <em>Integer</em></td>
            </tr>
            <tr>
                <td>string</td>
                <td>Строковое значение канала, для которого в таблице <strong>Каналы</strong> установлен тип данных <em>ASCII string</em> или <em>Unicode string</em></td>
            </tr>
        </tbody>
    </table>
    <p>Если входная формула канала возвращает другой тип данных, не указанный таблице, возвращаемое формулой значение будет приведено к соответствующему типу в зависимости от типа данных канала. Часть входной формулы канала, которая рассчитвает статус канала, должна возвращать целое число типа <em>int</em>.</p>

    <p>Выходные формулы каналов возвращают данные следующих типов:</p>
    <table class="table table-hover">
        <thead>
            <tr>
                <th>Тип данных</th>
                <th>Описание</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>double</td>
                <td>Значение команды. Чтобы отменить команду, формула должна вернуть <code>double.NaN</code></td>
            </tr>
            <tr>
                <td>CnlData</td>
                <td>Значение команды. Чтобы отменить команду, формула должна вернуть <code>CnlData.Empty</code></td>
            </tr>
            <tr>
                <td>byte[]</td>
                <td>Бинарные данные команды. Чтобы отменить команду, формула должна вернуть <code>null</code></td>
            </tr>
            <tr>
                <td>string</td>
                <td>Строковые данные команды. Преобразуются Сервером в массив байт</td>
            </tr>
        </tbody>
    </table>

    <h2 id="available-variables">Доступные переменные</h2>
    <p>Механизм скриптов предоставляет следующие встроенные переменные:</p>
    <table class="table table-hover">
        <thead>
            <tr>
                <th>Переменная</th>
                <th>Тип данных</th>
                <th>Описание</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>CnlVal, Cnl</td>
                <td>double</td>
                <td>Передаваемое Серверу значение входного канала до расчёта</td>
            </tr>
            <tr>
                <td>CnlStat</td>
                <td>int</td>
                <td>Передаваемый Серверу статус входного канала до расчёта</td>
            </tr>
            <tr>
                <td>CmdVal, Cmd</td>
                <td>double</td>
                <td>Передаваемое Серверу значение команды управления</td>
            </tr>
            <tr>
                <td>CmdData</td>
                <td>byte[]</td>
                <td>Передаваемые Серверу данные команды управления</td>
            </tr>
            <tr>
                <td>CnlNum</td>
                <td>int</td>
                <td>Номер канала, формула которого вычисляется</td>
            </tr>
            <tr>
                <td>E</td>
                <td>double</td>
                <td>Число e</td>
            </tr>
            <tr>
                <td>PI</td>
                <td>double</td>
                <td>Число π</td>
            </tr>
        </tbody>
    </table>

    <h2 id="available-functions">Доступные функции</h2>
    <p>Механизм скриптов предоставляет следующие встроенные функции:</p>
    <table class="table table-hover">
        <thead>
            <tr>
                <th>Функция</th>
                <th>Тип данных</th>
                <th>Описание</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>N(n)</td>
                <td>int</td>
                <td>Возвращает номер заданного канала для обновления номеров при клонировании</td>
            </tr>
            <tr>
                <td>Val()</td>
                <td>double</td>
                <td>Текущее значение входного канала вычисляемой формулы</td>
            </tr>
            <tr>
                <td>Val(n)</td>
                <td>double</td>
                <td>Текущее значение входного канала n</td>
            </tr>
            <tr>
                <td>SetVal(n, val)</td>
                <td>double</td>
                <td>Установить текущее значение входного канала n</td>
            </tr>
            <tr>
                <td>Stat()</td>
                <td>int</td>
                <td>Текущий статус входного канала вычисляемой формулы</td>
            </tr>
            <tr>
                <td>Stat(n)</td>
                <td>int</td>
                <td>Текущий статус входного канала n</td>
            </tr>
            <tr>
                <td>SetStat(n, stat)</td>
                <td>int</td>
                <td>Установить текущий статус входного канала n</td>
            </tr>
            <tr>
                <td>SetData(n, val, stat)</td>
                <td>double</td>
                <td>Установить текущее значение и статус входного канала n</td>
            </tr>
            <tr>
                <td>Abs(x)</td>
                <td>double</td>
                <td>Модуль</td>
            </tr>
            <tr>
                <td>Sin(x)</td>
                <td>double</td>
                <td>Синус</td>
            </tr>
            <tr>
                <td>Cos(x)</td>
                <td>double</td>
                <td>Косинус</td>
            </tr>
            <tr>
                <td>Tan(x)</td>
                <td>double</td>
                <td>Тангенс</td>
            </tr>
            <tr>
                <td>Exp(x)</td>
                <td>double</td>
                <td>Экспонента</td>
            </tr>
            <tr>
                <td>Ln(x), Log(x)</td>
                <td>double</td>
                <td>Натуральный логарифм</td>
            </tr>
            <tr>
                <td>Sqr(x)</td>
                <td>double</td>
                <td>Квадрат числа</td>
            </tr>
            <tr>
                <td>Sqrt(x)</td>
                <td>double</td>
                <td>Квадратный корень</td>
            </tr>
        </tbody>
    </table>

    <h2 id="template-functions">Функции из шаблона проекта</h2>
    <p>В проекте, который был создан на основе стандартного шаблона, таблица <strong>Скрипты</strong> содержит следующие функции:</p>
    <table class="table table-hover">
        <thead>
            <tr>
                <th>Функция</th>
                <th>Тип данных</th>
                <th>Описание</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>GetBit(n, val)</td>
                <td>double</td>
                <td>Возвращает бит n значения val</td>
            </tr>
        </tbody>
    </table>

    <p>Дополнительные скрипты, в том числе для работы со средними значениеми, <a href="https://github.com/RapidScada/scada-community/tree/master/Formulas" target="_blank">доступны на GitHub</a>.</p>

    <h2 id="debugging">Отладка скриптов</h2>
    <p>При разработке собственных скриптов необходимо соблюдать правила синтаксиса и проверять правильность работы скриптов. Если службе Сервера при запуске не удалось скомпилировать скрипты, информация об ошибке выводится в журнал работы Сервера, а компилируемый исходный код доступен в файле CalcEngine.cs, который расположен в директории журналов Сервера. Для разработки сложных формул рекомендуется использовать Microsoft Visual Studio или Visual Studio Code.</p>

    <h2 id="examples">Примеры формул</h2>
</div>
